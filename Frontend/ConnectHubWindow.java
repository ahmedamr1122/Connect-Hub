/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Frontend;

import Backend.content.ContentService;
import Backend.content.Post;
import Backend.content.Story;
import Backend.profile.ProfileUpdater;
import Backend.user.Status;
import Backend.user.User;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Cursor;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.RenderingHints;
import java.awt.geom.Ellipse2D;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.time.LocalDate;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BorderFactory;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.SwingConstants;

/**
 *
 * @author Jana
 */
public class ConnectHubWindow extends javax.swing.JFrame {

    /**
     * Creates new form ConnectHubWindow
     */
    private String selectedImagePath;
    private ContentService contentService;
    private User currentUser;
    
    public ConnectHubWindow() {
        initComponents();
        contentService = new ContentService(); // Assuming ContentService handles User's posts and stories internally
        currentUser = new User(
            "u1",
            "user1@example.com",
            "User1",
            "hashed_password",
            LocalDate.of(2000, 1, 1),
            Status.ONLINE,
            "This is User1's bio",
            "/path/to/profilePhoto.jpg",
            "/path/to/coverPhoto.jpg"
        );

        try {
            refreshNewsfeed();
        } catch (IOException e) {
            e.printStackTrace();
        }
       // contentService = ew ContentService("");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane2 = new javax.swing.JTabbedPane();
        kGradientPanel1 = new keeptoo.KGradientPanel();
        kGradientPanel2 = new keeptoo.KGradientPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        usernameField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jPasswordField1 = new javax.swing.JPasswordField();
        jButton2 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        kGradientPanel4 = new keeptoo.KGradientPanel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane(postPanel, JScrollPane.VERTICAL_SCROLLBAR_ALWAYS, JScrollPane.HORIZONTAL_SCROLLBAR_NEVER);
        postPanel = new javax.swing.JPanel();
        addPostButton = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane(StoriesPanel, JScrollPane.VERTICAL_SCROLLBAR_NEVER, JScrollPane.HORIZONTAL_SCROLLBAR_ALWAYS);
        StoriesPanel = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        refresh = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jPanel7 = new javax.swing.JPanel();
        pfp = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        kGradientPanel3 = new keeptoo.KGradientPanel();
        postStoryButton = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        storyCaptionTextField = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        uploadStoryButton = new javax.swing.JButton();
        imagePreview = new javax.swing.JLabel();
        kGradientPanel5 = new keeptoo.KGradientPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        uploadPostButton = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        ImagePreview2 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        postCaptionTextField = new javax.swing.JTextField();
        postPostButton = new javax.swing.JButton();
        kGradientPanel6 = new keeptoo.KGradientPanel();
        coverPhotoLabel = new javax.swing.JLabel();
        profilePicLabel = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel17 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        friendsScrollPanel = new javax.swing.JScrollPane();
        friendsPanel = new javax.swing.JPanel();
        userPosts = new javax.swing.JScrollPane(postPanel, JScrollPane.VERTICAL_SCROLLBAR_ALWAYS, JScrollPane.HORIZONTAL_SCROLLBAR_NEVER);
        userPostPanel = new javax.swing.JPanel();
        uploadPfp = new javax.swing.JButton();
        blockUsers = new javax.swing.JButton();
        uploadCoverPhoto1 = new javax.swing.JButton();
        updatePass = new javax.swing.JButton();
        updateBio = new javax.swing.JButton();
        bioLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        kGradientPanel1.setkEndColor(new java.awt.Color(51, 0, 51));
        kGradientPanel1.setkStartColor(new java.awt.Color(255, 153, 255));

        kGradientPanel2.setkEndColor(new java.awt.Color(51, 0, 51));
        kGradientPanel2.setkStartColor(new java.awt.Color(255, 153, 255));
        kGradientPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel3.setBackground(new java.awt.Color(255, 255, 255));
        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(51, 0, 51));
        jLabel3.setText("LogIn");

        usernameField.setBackground(new java.awt.Color(255, 255, 255));
        usernameField.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        usernameField.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(51, 0, 51)));
        usernameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usernameFieldActionPerformed(evt);
            }
        });

        jLabel4.setBackground(new java.awt.Color(255, 255, 255));
        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(51, 0, 51));
        jLabel4.setText("User Name");

        jLabel5.setBackground(new java.awt.Color(255, 255, 255));
        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(51, 0, 51));
        jLabel5.setText("Password");

        jPasswordField1.setBackground(new java.awt.Color(255, 255, 255));
        jPasswordField1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jPasswordField1.setForeground(new java.awt.Color(0, 0, 0));
        jPasswordField1.setText("jPasswordField1");
        jPasswordField1.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(51, 0, 51)));

        jButton2.setBackground(new java.awt.Color(51, 0, 51));
        jButton2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jButton2.setText("Log in");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(116, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel5)
                            .addComponent(usernameField, javax.swing.GroupLayout.DEFAULT_SIZE, 225, Short.MAX_VALUE)
                            .addComponent(jLabel4)
                            .addComponent(jPasswordField1)
                            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(90, 90, 90))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(176, 176, 176))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(121, 121, 121)
                .addComponent(jLabel3)
                .addGap(33, 33, 33)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(usernameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPasswordField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(jButton2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        kGradientPanel2.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(462, 0, -1, 530));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 153, 255));
        jLabel6.setText("A Social Media Platform");
        kGradientPanel2.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 460, 210, -1));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 48)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 0, 51));
        jLabel1.setText("ConnectHub");
        kGradientPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 120, 320, 60));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel2.setText("Welcome to");
        kGradientPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 80, 270, 60));

        javax.swing.GroupLayout kGradientPanel1Layout = new javax.swing.GroupLayout(kGradientPanel1);
        kGradientPanel1.setLayout(kGradientPanel1Layout);
        kGradientPanel1Layout.setHorizontalGroup(
            kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 893, Short.MAX_VALUE)
            .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, kGradientPanel1Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(kGradientPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        kGradientPanel1Layout.setVerticalGroup(
            kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 530, Short.MAX_VALUE)
            .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(kGradientPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("tab1", kGradientPanel1);

        kGradientPanel4.setkEndColor(new java.awt.Color(255, 204, 255));
        kGradientPanel4.setkStartColor(new java.awt.Color(51, 0, 51));
        kGradientPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(51, 0, 51)));

        postPanel.setLayout(new javax.swing.BoxLayout(postPanel, javax.swing.BoxLayout.Y_AXIS));
        jScrollPane2.setViewportView(postPanel);

        addPostButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Frontend/Plus.png"))); // NOI18N
        addPostButton.setText("jLabel9");
        addPostButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addPostButtonMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(296, 296, 296)
                .addComponent(addPostButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 398, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(addPostButton)
                .addContainerGap())
        );

        kGradientPanel4.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 60, 660, 470));

        StoriesPanel.setBackground(new java.awt.Color(255, 204, 255));
        jScrollPane1.setViewportView(StoriesPanel);

        kGradientPanel4.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, -6, 510, 70));

        jPanel3.setBackground(new java.awt.Color(0, 0, 0));

        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 204, 255));
        jLabel9.setText("Post a New Story");
        jLabel9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel9MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(19, Short.MAX_VALUE)
                .addComponent(jLabel9)
                .addGap(16, 16, 16))
        );

        kGradientPanel4.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 0, 160, 60));

        refresh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Frontend/refresh2.png"))); // NOI18N
        refresh.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                refreshMouseClicked(evt);
            }
        });
        kGradientPanel4.add(refresh, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 50, 50));

        jLabel14.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("Friend Suggestions");
        kGradientPanel4.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 80, -1, -1));

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 124, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 214, Short.MAX_VALUE)
        );

        jScrollPane4.setViewportView(jPanel7);

        kGradientPanel4.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 100, 130, 220));

        pfp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Frontend/Female User.png"))); // NOI18N
        pfp.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pfpMouseClicked(evt);
            }
        });
        kGradientPanel4.add(pfp, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 10, -1, -1));

        jTabbedPane2.addTab("tab3", kGradientPanel4);

        jPanel4.setBackground(new java.awt.Color(51, 0, 51));

        kGradientPanel3.setkEndColor(new java.awt.Color(51, 0, 51));
        kGradientPanel3.setkStartColor(new java.awt.Color(255, 204, 255));

        postStoryButton.setBackground(new java.awt.Color(255, 255, 255));
        postStoryButton.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        postStoryButton.setForeground(new java.awt.Color(51, 0, 51));
        postStoryButton.setText("Post Story");
        postStoryButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                postStoryButtonActionPerformed(evt);
            }
        });

        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Frontend/Welcome_to_ConnectHub-removebg-preview.png"))); // NOI18N
        jLabel11.setText("jLabel11");

        javax.swing.GroupLayout kGradientPanel3Layout = new javax.swing.GroupLayout(kGradientPanel3);
        kGradientPanel3.setLayout(kGradientPanel3Layout);
        kGradientPanel3Layout.setHorizontalGroup(
            kGradientPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel3Layout.createSequentialGroup()
                .addGroup(kGradientPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(kGradientPanel3Layout.createSequentialGroup()
                        .addGap(115, 115, 115)
                        .addComponent(postStoryButton, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(kGradientPanel3Layout.createSequentialGroup()
                        .addGap(75, 75, 75)
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(116, Short.MAX_VALUE))
        );
        kGradientPanel3Layout.setVerticalGroup(
            kGradientPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, kGradientPanel3Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                .addComponent(postStoryButton, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(64, 64, 64))
        );

        storyCaptionTextField.setBackground(new java.awt.Color(51, 0, 51));
        storyCaptionTextField.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        storyCaptionTextField.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(255, 204, 255)));
        storyCaptionTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                storyCaptionTextFieldActionPerformed(evt);
            }
        });

        jLabel7.setBackground(new java.awt.Color(255, 255, 255));
        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 204, 255));
        jLabel7.setText("Add Caption:");

        jLabel8.setBackground(new java.awt.Color(255, 255, 255));
        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 204, 255));
        jLabel8.setText("Upload Image:");

        jLabel10.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 0, 2, new java.awt.Color(255, 204, 255)));

        uploadStoryButton.setBackground(new java.awt.Color(255, 255, 255));
        uploadStoryButton.setForeground(new java.awt.Color(51, 0, 51));
        uploadStoryButton.setText("Upload");
        uploadStoryButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uploadStoryButtonActionPerformed(evt);
            }
        });

        imagePreview.setBackground(new java.awt.Color(255, 204, 255));
        imagePreview.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        imagePreview.setForeground(new java.awt.Color(255, 204, 255));
        imagePreview.setText("No image selected");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(storyCaptionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 388, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(16, 16, 16)
                                .addComponent(jLabel8)
                                .addGap(18, 18, 18)
                                .addComponent(uploadStoryButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(imagePreview, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(216, 216, 216)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(kGradientPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(kGradientPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(uploadStoryButton, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(imagePreview, javax.swing.GroupLayout.DEFAULT_SIZE, 289, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(storyCaptionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(77, 77, 77))
        );

        jTabbedPane2.addTab("tab4", jPanel4);

        kGradientPanel5.setkEndColor(new java.awt.Color(255, 204, 255));
        kGradientPanel5.setkStartColor(new java.awt.Color(51, 0, 51));

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));

        jLabel12.setBackground(new java.awt.Color(255, 255, 255));
        jLabel12.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(51, 0, 51));
        jLabel12.setText("Upload Image");

        uploadPostButton.setBackground(new java.awt.Color(51, 0, 51));
        uploadPostButton.setForeground(new java.awt.Color(255, 255, 255));
        uploadPostButton.setText("Upload");
        uploadPostButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uploadPostButtonActionPerformed(evt);
            }
        });

        jLabel13.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 2, 0, 0, new java.awt.Color(51, 0, 51)));

        ImagePreview2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        ImagePreview2.setForeground(new java.awt.Color(51, 0, 51));
        ImagePreview2.setText("No image selected");

        jLabel15.setBackground(new java.awt.Color(255, 255, 255));
        jLabel15.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(51, 0, 51));
        jLabel15.setText("Add Caption:");

        postCaptionTextField.setBackground(new java.awt.Color(255, 255, 255));
        postCaptionTextField.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        postCaptionTextField.setForeground(new java.awt.Color(51, 0, 51));
        postCaptionTextField.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(51, 0, 51)));
        postCaptionTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                postCaptionTextFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(200, 200, 200)
                .addComponent(jLabel12)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(86, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addComponent(uploadPostButton, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(177, 177, 177))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addComponent(ImagePreview2, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(105, 105, 105))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(postCaptionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 388, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15))
                        .addGap(82, 82, 82))))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(uploadPostButton, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ImagePreview2, javax.swing.GroupLayout.DEFAULT_SIZE, 213, Short.MAX_VALUE))
                .addGap(45, 45, 45)
                .addComponent(jLabel15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(postCaptionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(123, Short.MAX_VALUE))
        );

        postPostButton.setBackground(new java.awt.Color(255, 255, 255));
        postPostButton.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        postPostButton.setForeground(new java.awt.Color(51, 0, 51));
        postPostButton.setText("Add New Post");
        postPostButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                postPostButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout kGradientPanel5Layout = new javax.swing.GroupLayout(kGradientPanel5);
        kGradientPanel5.setLayout(kGradientPanel5Layout);
        kGradientPanel5Layout.setHorizontalGroup(
            kGradientPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, kGradientPanel5Layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addComponent(postPostButton, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 100, Short.MAX_VALUE)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        kGradientPanel5Layout.setVerticalGroup(
            kGradientPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, kGradientPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(postPostButton, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(87, 87, 87))
        );

        jTabbedPane2.addTab("tab4", kGradientPanel5);

        kGradientPanel6.setkEndColor(new java.awt.Color(51, 0, 51));
        kGradientPanel6.setkStartColor(new java.awt.Color(255, 204, 255));
        kGradientPanel6.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        kGradientPanel6.add(coverPhotoLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 393, 190));

        profilePicLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        profilePicLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Frontend/1-removebg.png"))); // NOI18N
        kGradientPanel6.add(profilePicLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 190, -1, 98));

        jButton1.setBackground(new java.awt.Color(255, 204, 255));
        jButton1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(51, 0, 51));
        jButton1.setText("Upload Photo");
        kGradientPanel6.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(876, 247, 125, 23));

        jLabel17.setBackground(new java.awt.Color(255, 255, 255));
        jLabel17.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(51, 0, 51));
        jLabel17.setText("Bio:");
        kGradientPanel6.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 260, -1, -1));

        jLabel20.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(51, 0, 51));
        jLabel20.setText("Your Friends");
        kGradientPanel6.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 320, -1, -1));

        friendsPanel.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout friendsPanelLayout = new javax.swing.GroupLayout(friendsPanel);
        friendsPanel.setLayout(friendsPanelLayout);
        friendsPanelLayout.setHorizontalGroup(
            friendsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 192, Short.MAX_VALUE)
        );
        friendsPanelLayout.setVerticalGroup(
            friendsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 210, Short.MAX_VALUE)
        );

        friendsScrollPanel.setViewportView(friendsPanel);

        kGradientPanel6.add(friendsScrollPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(97, 321, -1, 204));

        userPostPanel.setBackground(new java.awt.Color(255, 255, 255));
        userPostPanel.setLayout(new javax.swing.BoxLayout(userPostPanel, javax.swing.BoxLayout.Y_AXIS));
        userPosts.setViewportView(userPostPanel);

        kGradientPanel6.add(userPosts, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, -10, 465, 540));

        uploadPfp.setBackground(new java.awt.Color(255, 204, 255));
        uploadPfp.setForeground(new java.awt.Color(51, 0, 51));
        uploadPfp.setText("Upload Profile Photo");
        uploadPfp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uploadPfpActionPerformed(evt);
            }
        });
        kGradientPanel6.add(uploadPfp, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 210, 150, -1));

        blockUsers.setBackground(new java.awt.Color(255, 204, 255));
        blockUsers.setForeground(new java.awt.Color(51, 0, 51));
        blockUsers.setText("Block Users");
        blockUsers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                blockUsersActionPerformed(evt);
            }
        });
        kGradientPanel6.add(blockUsers, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 430, 130, -1));

        uploadCoverPhoto1.setBackground(new java.awt.Color(255, 204, 255));
        uploadCoverPhoto1.setForeground(new java.awt.Color(51, 0, 51));
        uploadCoverPhoto1.setText("Upload Cover Photo");
        uploadCoverPhoto1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uploadCoverPhoto1ActionPerformed(evt);
            }
        });
        kGradientPanel6.add(uploadCoverPhoto1, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 240, 150, -1));

        updatePass.setBackground(new java.awt.Color(255, 204, 255));
        updatePass.setForeground(new java.awt.Color(51, 0, 51));
        updatePass.setText("Update Password");
        updatePass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updatePassActionPerformed(evt);
            }
        });
        kGradientPanel6.add(updatePass, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 460, 130, -1));

        updateBio.setBackground(new java.awt.Color(255, 204, 255));
        updateBio.setForeground(new java.awt.Color(51, 0, 51));
        updateBio.setText("Update Bio");
        updateBio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBioActionPerformed(evt);
            }
        });
        kGradientPanel6.add(updateBio, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 290, 100, -1));

        bioLabel.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(51, 0, 51)));
        kGradientPanel6.add(bioLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 290, 170, 30));

        jTabbedPane2.addTab("tab5", kGradientPanel6);

        getContentPane().add(jTabbedPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 890, 560));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel9MouseClicked
        jTabbedPane2.setSelectedIndex(2);
    }//GEN-LAST:event_jLabel9MouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        jTabbedPane2.setSelectedIndex(1);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void usernameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usernameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_usernameFieldActionPerformed

    private void storyCaptionTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_storyCaptionTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_storyCaptionTextFieldActionPerformed

    private void uploadStoryButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uploadStoryButtonActionPerformed
        uploadImageStory();
    }//GEN-LAST:event_uploadStoryButtonActionPerformed

    private void postStoryButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_postStoryButtonActionPerformed
        try {
            postStory();
            jTabbedPane2.setSelectedIndex(1);
        } catch (IOException ex) {
            Logger.getLogger(ConnectHubWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_postStoryButtonActionPerformed

    private void addPostButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addPostButtonMouseClicked
        jTabbedPane2.setSelectedIndex(3);
    }//GEN-LAST:event_addPostButtonMouseClicked

    private void uploadPostButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uploadPostButtonActionPerformed
        uploadImagePost();
    }//GEN-LAST:event_uploadPostButtonActionPerformed

    private void postCaptionTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_postCaptionTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_postCaptionTextFieldActionPerformed

    private void postPostButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_postPostButtonActionPerformed
        try {
            postPost();
            jTabbedPane2.setSelectedIndex(1);
        } catch (IOException ex) {
            Logger.getLogger(ConnectHubWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_postPostButtonActionPerformed

    private void refreshMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_refreshMouseClicked
        try {
                    refreshNewsfeed();
                } catch (IOException e) {
                    e.printStackTrace();
                }
    }//GEN-LAST:event_refreshMouseClicked

    private void pfpMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pfpMouseClicked
        jTabbedPane2.setSelectedIndex(4);
        displayFriendsList(currentUser);
    }//GEN-LAST:event_pfpMouseClicked

    private void uploadPfpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uploadPfpActionPerformed
        uploadProfilePicture();
    }//GEN-LAST:event_uploadPfpActionPerformed

    private void blockUsersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_blockUsersActionPerformed
        uploadCoverPhoto();
    }//GEN-LAST:event_blockUsersActionPerformed

    private void uploadCoverPhoto1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uploadCoverPhoto1ActionPerformed
        uploadCoverPhoto();
    }//GEN-LAST:event_uploadCoverPhoto1ActionPerformed

    private void updatePassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updatePassActionPerformed
        updatePassword();
    }//GEN-LAST:event_updatePassActionPerformed

    private void updateBioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBioActionPerformed
        updateBio();
    }//GEN-LAST:event_updateBioActionPerformed

        private void uploadImageStory() 
        {
            JFileChooser fileChooser = new JFileChooser();
            fileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);

            // Filter for image files only (jpg, png)
            fileChooser.setFileFilter(new javax.swing.filechooser.FileNameExtensionFilter("Image files", "jpg", "png", "jpeg", "gif"));

            int result = fileChooser.showOpenDialog(this);
            if (result == JFileChooser.APPROVE_OPTION) {
                File selectedFile = fileChooser.getSelectedFile();
                selectedImagePath = selectedFile.getAbsolutePath();
                imagePreview.setText(""); // Clear the "No image selected" text

                // Display the image in the label (resized for preview)
                ImageIcon icon = new ImageIcon(new ImageIcon(selectedImagePath).getImage().getScaledInstance(200, 150, Image.SCALE_SMOOTH));
                imagePreview.setIcon(icon);
            }
        }
        private void uploadImagePost() 
        {
            JFileChooser fileChooser = new JFileChooser();
            fileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);

            // Filter for image files only (jpg, png)
            fileChooser.setFileFilter(new javax.swing.filechooser.FileNameExtensionFilter("Image files", "jpg", "png", "jpeg", "gif"));

            int result = fileChooser.showOpenDialog(this);
            if (result == JFileChooser.APPROVE_OPTION) {
                File selectedFile = fileChooser.getSelectedFile();
                selectedImagePath = selectedFile.getAbsolutePath();
                ImagePreview2.setText(""); // Clear the "No image selected" text

                // Display the image in the label (resized for preview)
                ImageIcon icon = new ImageIcon(new ImageIcon(selectedImagePath).getImage().getScaledInstance(200, 150, Image.SCALE_SMOOTH));
                ImagePreview2.setIcon(icon);
            }
        }
        
        
        private void postStory() throws IOException {
        String caption = storyCaptionTextField.getText().trim();

        if (selectedImagePath == null || selectedImagePath.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please upload an image for the story.");
            return;
        }

        // Call createStory method from ContentService
        contentService.createStory(currentUser, caption, selectedImagePath);
        JOptionPane.showMessageDialog(this, "Story posted successfully!");
        // Clear inputs
        storyCaptionTextField.setText("");
        imagePreview.setIcon(null);
        imagePreview.setText("No image selected");
        selectedImagePath = null;
        refreshNewsfeed();
       }
        private void postPost() throws IOException {
            String caption = postCaptionTextField.getText().trim();

            if (selectedImagePath == null || selectedImagePath.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Please upload an image for the Post.");
                return;
            }

            // Call createStory method from ContentService
            contentService.createPost(currentUser , caption, selectedImagePath);
            JOptionPane.showMessageDialog(this, "Post added successfully!");
            // Clear inputs
            postCaptionTextField.setText("");
            ImagePreview2.setIcon(null);
            ImagePreview2.setText("No image selected");
            selectedImagePath = null;
            refreshNewsfeed();
            displayUserPosts(currentUser);
            
       }
        
        private void refreshNewsfeed() throws IOException {
            // Clear existing components
            StoriesPanel.removeAll();
            postPanel.removeAll();

            // Fetch and update active stories
            List<Story> activeStories = contentService.getFriendStories(currentUser);
            activeStories.addAll(currentUser.getStories());
            for (Story story : activeStories) {
                addStoryToPanel(story);
            }

            // Fetch and update posts
            List<Post> posts = contentService.getFriendPosts(currentUser);
            posts.addAll(currentUser.getPosts());
            for (Post post : posts) {
                addPostToPanel(post);
            }

            // Refresh panels
            StoriesPanel.revalidate();
            StoriesPanel.repaint();
            postPanel.revalidate();
            postPanel.repaint();
        }
        
        private void addStoryToPanel(Story story) {
            JLabel storyLabel = new JLabel(new ImageIcon(new ImageIcon(story.getImagePath()).getImage().getScaledInstance(100, 100, Image.SCALE_SMOOTH)));
            storyLabel.setToolTipText(story.getContentText());
            storyLabel.setCursor(new Cursor(Cursor.HAND_CURSOR));

            // Open story details on click
            storyLabel.addMouseListener(new java.awt.event.MouseAdapter() {
                @Override
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    new displayStoryDetails(story).setVisible(true);
                }
            });

            StoriesPanel.add(storyLabel);
        }
        /*
        private void addPostToPanel(Post post) {
        JPanel postItemPanel = new JPanel();
        postItemPanel.setLayout(new BorderLayout());
        postItemPanel.setBorder(BorderFactory.createLineBorder(Color.GRAY, 1));
        postItemPanel.setPreferredSize(new Dimension(638, 392));

        JLabel contentLabel = new JLabel("<html>" + post.getContentText() + "</html>");
        contentLabel.setFont(new Font("Arial", Font.PLAIN, 14)); 
        contentLabel.setHorizontalAlignment(SwingConstants.CENTER);
        contentLabel.setBorder(BorderFactory.createLineBorder(Color.GRAY, 1));
        
        JPanel headerPanel = new JPanel();
        headerPanel.setLayout(new BorderLayout());
        
        JLabel userNameLabel = new JLabel(post.getAuthorId());  // Get the user's name from the post
        userNameLabel.setFont(new Font("Arial", Font.BOLD, 14));  // Set the font for the user name
        headerPanel.add(userNameLabel, BorderLayout.WEST);

        JLabel imageLabel = new JLabel();
        if (post.getImagePath() != null && !post.getImagePath().isEmpty()) {
            ImageIcon originalImage = new ImageIcon(post.getImagePath());
        
            // Maintain aspect ratio while scaling
            int maxWidth = 638;  // Max width for the image
            int maxHeight = 292; // Max height for the image

            int imageWidth = originalImage.getIconWidth();
            int imageHeight = originalImage.getIconHeight();

            // Calculate the scaling factor to maintain aspect ratio
            double widthRatio = (double) maxWidth / imageWidth;
            double heightRatio = (double) maxHeight / imageHeight;

            double scaleRatio = Math.min(widthRatio, heightRatio);  // Use the smaller ratio to maintain aspect ratio

            int newWidth = (int) (imageWidth * scaleRatio);
            int newHeight = (int) (imageHeight * scaleRatio);

            Image scaledImage = originalImage.getImage().getScaledInstance(newWidth, newHeight, Image.SCALE_SMOOTH);
            imageLabel.setIcon(new ImageIcon(scaledImage));
        }
        postItemPanel.add(headerPanel, BorderLayout.NORTH);

            // Add the image label to the center of the panel
        postItemPanel.add(imageLabel, BorderLayout.CENTER);

            // Add the content label (caption) at the bottom of the post
        postItemPanel.add(contentLabel, BorderLayout.SOUTH);

        postPanel.add(postItemPanel);
    }*/
    private JPanel createPostItemPanel(Post post) {
        JPanel postItemPanel = new JPanel();
        postItemPanel.setLayout(new BorderLayout());
        postItemPanel.setBorder(BorderFactory.createLineBorder(Color.GRAY, 1));
        postItemPanel.setPreferredSize(new Dimension(638, 392));

        // Create the content label (caption)
        JLabel contentLabel = new JLabel("<html>" + post.getContentText() + "</html>");
        contentLabel.setFont(new Font("Arial", Font.PLAIN, 14));
        contentLabel.setHorizontalAlignment(SwingConstants.CENTER);
        contentLabel.setBorder(BorderFactory.createLineBorder(Color.GRAY, 1));

        // Create the header panel (user name)
        JPanel headerPanel = new JPanel();
        headerPanel.setLayout(new BorderLayout());

        // Add user name to the left
        JLabel userNameLabel = new JLabel(post.getAuthorId());  // Get the user's name from the post
        userNameLabel.setFont(new Font("Arial", Font.BOLD, 14));  // Set the font for the user name
        headerPanel.add(userNameLabel, BorderLayout.WEST);

        // Create the image label
        JLabel imageLabel = new JLabel();
        if (post.getImagePath() != null && !post.getImagePath().isEmpty()) {
            ImageIcon originalImage = new ImageIcon(post.getImagePath());

            // Maintain aspect ratio while scaling
            int maxWidth = 638;  // Max width for the image
            int maxHeight = 292; // Max height for the image

            int imageWidth = originalImage.getIconWidth();
            int imageHeight = originalImage.getIconHeight();

            // Calculate the scaling factor to maintain aspect ratio
            double widthRatio = (double) maxWidth / imageWidth;
            double heightRatio = (double) maxHeight / imageHeight;

            double scaleRatio = Math.min(widthRatio, heightRatio);  // Use the smaller ratio to maintain aspect ratio

            int newWidth = (int) (imageWidth * scaleRatio);
            int newHeight = (int) (imageHeight * scaleRatio);

            Image scaledImage = originalImage.getImage().getScaledInstance(newWidth, newHeight, Image.SCALE_SMOOTH);
            imageLabel.setIcon(new ImageIcon(scaledImage));
    }

    // Add the header panel (user name) to the post
    postItemPanel.add(headerPanel, BorderLayout.NORTH);

    // Add the image label to the center of the panel
    postItemPanel.add(imageLabel, BorderLayout.CENTER);

    // Add the content label (caption) at the bottom of the post
    postItemPanel.add(contentLabel, BorderLayout.SOUTH);

    return postItemPanel;
}
   
        private void displayUserPosts(User currentUser) {
            
            userPostPanel.removeAll();
            for (Post post : currentUser.getPosts()) {
                addPostToUserPanel(post);
            }
            userPostPanel.revalidate();
            userPostPanel.repaint();
        }
        /*
        private void addPostToUserPanel(Post post){
            JPanel postItemUserPanel = new JPanel();
            postItemUserPanel.setLayout(new BorderLayout());
            postItemUserPanel.setBorder(BorderFactory.createLineBorder(Color.GRAY, 1));
            postItemUserPanel.setPreferredSize(new Dimension(638, 392));

            JLabel contentUserLabel = new JLabel("<html>" + post.getContentText() + "</html>");
            contentUserLabel.setFont(new Font("Arial", Font.PLAIN, 14)); 
            contentUserLabel.setHorizontalAlignment(SwingConstants.CENTER);
            contentUserLabel.setBorder(BorderFactory.createLineBorder(Color.GRAY, 1));

            JPanel headerPanel = new JPanel();
            headerPanel.setLayout(new BorderLayout());

            JLabel userNameLabel = new JLabel(post.getAuthorId());  // Get the user's name from the post
            userNameLabel.setFont(new Font("Arial", Font.BOLD, 14));  // Set the font for the user name
            headerPanel.add(userNameLabel, BorderLayout.WEST);

            JLabel imageLabel = new JLabel();
            if (post.getImagePath() != null && !post.getImagePath().isEmpty())
            {
                ImageIcon originalImage = new ImageIcon(post.getImagePath());

                // Maintain aspect ratio while scaling
                int maxWidth = 638;  // Max width for the image
                int maxHeight = 292; // Max height for the image

                int imageWidth = originalImage.getIconWidth();
                int imageHeight = originalImage.getIconHeight();

                // Calculate the scaling factor to maintain aspect ratio
                double widthRatio = (double) maxWidth / imageWidth;
                double heightRatio = (double) maxHeight / imageHeight;

                double scaleRatio = Math.min(widthRatio, heightRatio);  // Use the smaller ratio to maintain aspect ratio

                int newWidth = (int) (imageWidth * scaleRatio);
                int newHeight = (int) (imageHeight * scaleRatio);

                Image scaledImage = originalImage.getImage().getScaledInstance(newWidth, newHeight, Image.SCALE_SMOOTH);
                imageLabel.setIcon(new ImageIcon(scaledImage));
            }
            postItemUserPanel.add(headerPanel, BorderLayout.NORTH);

                // Add the image label to the center of the panel
            postItemUserPanel.add(imageLabel, BorderLayout.CENTER);

                // Add the content label (caption) at the bottom of the post
            postItemUserPanel.add(contentUserLabel, BorderLayout.SOUTH);

            userPostPanel.add(postItemUserPanel);
        }*/
        
        private void addPostToPanel(Post post) {
            JPanel postItemPanel = createPostItemPanel(post);  // Reuse the helper method
            postPanel.add(postItemPanel);
        }

        private void addPostToUserPanel(Post post) {
            JPanel postItemUserPanel = createPostItemPanel(post);  // Reuse the helper method
            userPostPanel.add(postItemUserPanel);
        }
        
        private void displayFriendsList(User currentUser){
            for (User friend : currentUser.getFriends()) {
                JLabel friendLabel = new JLabel(friend.getUsername() + " (" + friend.getStatus() + ")");
                friendsPanel.add(friendLabel);
            }
        }
        
        private void uploadProfilePicture() {
            JFileChooser fileChooser = new JFileChooser();
            fileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
            fileChooser.setFileFilter(new javax.swing.filechooser.FileNameExtensionFilter("Image files", "jpg", "png", "jpeg", "gif"));
            int result = fileChooser.showOpenDialog(this);

            if (result == JFileChooser.APPROVE_OPTION) {
                File selectedFile = fileChooser.getSelectedFile();
                String filePath = selectedFile.getAbsolutePath();

                try {
                    // Using ProfileUpdater to update the profile picture
                    ProfileUpdater profileUpdater = new ProfileUpdater();
                    profileUpdater.updateProfilePhoto(currentUser.getUserId(), filePath); // Update the profile photo

                    // Set the profile picture in a circular shape
                    ImageIcon profilePicIcon = new ImageIcon(filePath);
                    Image profilePicImage = profilePicIcon.getImage().getScaledInstance(150, 150, Image.SCALE_SMOOTH);
                    ImageIcon profilePicCircularIcon = new ImageIcon(createCircularImage(profilePicImage));

                    profilePicLabel.setIcon(profilePicCircularIcon); // Assuming profilePicLabel is the JLabel showing the profile image
                } catch (IOException e) {
                    e.printStackTrace();
                    JOptionPane.showMessageDialog(this, "Error updating profile picture.", "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
        }
        
        private Image createCircularImage(Image image) {
            int width = image.getWidth(null);
            int height = image.getHeight(null);

            if (width <= 0 || height <= 0) {
                throw new IllegalArgumentException("Invalid image dimensions: width = " + width + ", height = " + height);
            }

            int diameter = Math.min(width, height);
            BufferedImage circularImage = new BufferedImage(diameter, diameter, BufferedImage.TYPE_INT_ARGB);
            Graphics2D g = circularImage.createGraphics();
            g.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
            g.setClip(new Ellipse2D.Float(0, 0, diameter, diameter));
            g.drawImage(image, 0, 0, null);
            g.dispose();
            return circularImage;
        }

        
        private void uploadCoverPhoto() {
            JFileChooser fileChooser = new JFileChooser();
            fileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
            fileChooser.setFileFilter(new javax.swing.filechooser.FileNameExtensionFilter("Image files", "jpg", "png", "jpeg", "gif"));
            int result = fileChooser.showOpenDialog(this);

            if (result == JFileChooser.APPROVE_OPTION) {
                File selectedFile = fileChooser.getSelectedFile();
                String filePath = selectedFile.getAbsolutePath();

                try {
                    // Using ProfileUpdater to update the cover photo
                    ProfileUpdater profileUpdater = new ProfileUpdater();
                    profileUpdater.updateCoverPhoto(currentUser.getUserId(), filePath); // Update the cover photo

                    // Update the cover photo on the profile page
                    ImageIcon coverPhotoIcon = new ImageIcon(filePath);
                    coverPhotoLabel.setIcon(coverPhotoIcon); // Assuming coverPhotoLabel is the JLabel for the cover photo
                } catch (IOException e) {
                    e.printStackTrace();
                    JOptionPane.showMessageDialog(this, "Error updating cover photo.", "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
        }
        
        private void updatePassword() {
            String newPassword = JOptionPane.showInputDialog(this, "Enter new password:");
            if (newPassword != null && !newPassword.isEmpty()) {
                try {
                    ProfileUpdater profileUpdater = new ProfileUpdater();
                    profileUpdater.updatePassword(currentUser.getUserId(), newPassword); // Update the password in the user profile
                    JOptionPane.showMessageDialog(this, "Password updated successfully!");
                } catch (IOException e) {
                    e.printStackTrace();
                    JOptionPane.showMessageDialog(this, "Error updating password.", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(this, "Password cannot be empty.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
        
        private void updateBio() {
            // Prompt the user to enter a new bio
            String newBio = JOptionPane.showInputDialog(this, "Enter your new bio:", "Update Bio", JOptionPane.PLAIN_MESSAGE);

            // Check if the user canceled or entered an empty bio
            if (newBio == null || newBio.trim().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Bio cannot be empty or cancelled.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            try {
                // Use ProfileUpdater to update the bio
                ProfileUpdater profileUpdater = new ProfileUpdater();
                profileUpdater.updateBio(currentUser.getUserId(), newBio.trim()); // Update the bio for the current user

                // Optionally, update the displayed bio on the profile page
                JOptionPane.showMessageDialog(this, "Bio updated successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);

                // Update the displayed bio in the UI (e.g., a label)
                bioLabel.setText(newBio.trim());  // Assuming bioLabel is a JLabel showing the bio
            } catch (IOException e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(this, "Error updating bio.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
        
        
        
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ConnectHubWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ConnectHubWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ConnectHubWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ConnectHubWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ConnectHubWindow().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ImagePreview2;
    private javax.swing.JPanel StoriesPanel;
    private javax.swing.JLabel addPostButton;
    private javax.swing.JLabel bioLabel;
    private javax.swing.JButton blockUsers;
    private javax.swing.JLabel coverPhotoLabel;
    private javax.swing.JPanel friendsPanel;
    private javax.swing.JScrollPane friendsScrollPanel;
    private javax.swing.JLabel imagePreview;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane2;
    private keeptoo.KGradientPanel kGradientPanel1;
    private keeptoo.KGradientPanel kGradientPanel2;
    private keeptoo.KGradientPanel kGradientPanel3;
    private keeptoo.KGradientPanel kGradientPanel4;
    private keeptoo.KGradientPanel kGradientPanel5;
    private keeptoo.KGradientPanel kGradientPanel6;
    private javax.swing.JLabel pfp;
    private javax.swing.JTextField postCaptionTextField;
    private javax.swing.JPanel postPanel;
    private javax.swing.JButton postPostButton;
    private javax.swing.JButton postStoryButton;
    private javax.swing.JLabel profilePicLabel;
    private javax.swing.JLabel refresh;
    private javax.swing.JTextField storyCaptionTextField;
    private javax.swing.JButton updateBio;
    private javax.swing.JButton updatePass;
    private javax.swing.JButton uploadCoverPhoto1;
    private javax.swing.JButton uploadPfp;
    private javax.swing.JButton uploadPostButton;
    private javax.swing.JButton uploadStoryButton;
    private javax.swing.JPanel userPostPanel;
    private javax.swing.JScrollPane userPosts;
    private javax.swing.JTextField usernameField;
    // End of variables declaration//GEN-END:variables
}
